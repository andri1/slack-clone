type Message {
  id: ID!
  author: User!
  content: String
  recipientType: RecipientType!
  "recipient if recipientType === USER"
  recipientUser: User
  "recipient if recipientType === CHANNEL"
  channel: Channel
  createdAt: Date!
  updatedAt: Date!
}

enum RecipientType {
  CHANNEL
  USER
}

type Query {
  directMessages(recipientUserID: ID!): [Message!]!
  channelMessages(channelID: ID!): [Message!]!
}

type Mutation {
  sendDirectMessage(input: CreateDirectMessageInput!): Message!
  sendChannelMessage(input: CreateChannelMessageInput!): Message!
}

type Subscription {
  directMessageCreated(recipientUserID: ID!): Message!
  channelMessageCreated(channelID: ID!): Message!
}

input CreateDirectMessageInput {
  content: String
  recipientUserID: ID!
}

input CreateChannelMessageInput {
  content: String
  channelID: ID!
}
